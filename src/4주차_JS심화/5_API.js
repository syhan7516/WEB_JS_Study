document.write("<div>5장 API</div>");

// // 데이터 요청 (json placeholder → Resources → dumy data (open API))
// // 요청 주소 : URL , 데이터 형식 : JSON

// // fetch(주소)
// async function getData()
// {
//     let response = await fetch('https://jsonplaceholder.typicode.com/posts');
//     let result = await response.json();
//     console.log(result);
// }

// getData();

// // 수업 내용

// // API란?
// // : Application Programming Interface
// // : 응용 프로그램 프로그래밍 인터페이스
// // : 응용 프로그램에서 사용할 수 있도록, OS나 프로그래밍 언어가 제공하는 기능을 제어할 수 있게 만든 인터페이스를 뜻함 !
// // : 주로 파일 제어, 창 제어, 화상 처리, 문자 제어 등을 위한 인터페이스를 제공 !
// // : ✔ 정의가 너무 어렵다...

// // API 절차? ( 예: 레스토랑에서 음식을 먹으려면 ? )
// // 1. 손님은 웨이터에게 음식 주문
// // 2. 웨이터는 냉장고에서 음식을 찾음
// // 3. 냉장고에서 음식을 찾으면 가져옴
// // 4. 웨이터는 손님에게 음식을 서빙
// // : ✔ 이 과정이 웹 상에서 정보를 보는 것과 매우 흡사 !

// // API 절차 확인 후 API는?
// // : 클라이언트가 서버로 데이터롤 요청하고, 요청 데이터를 전달받는 과정 !
// // : 프로그램과 프로그램의 연결 다리 및 대화를 할 수있는 방법 ! 

// // API의 목적은?
// // : 요청한 데이터를 반환받기 위한 목적 !
// // : 함수와 비슷하나, 큰 차이점은 그 응답을 언제받을지 모른다는 것 ! 
// // → why? : 다른 컴퓨터에서 받아오기 때문에 여러 요인으로 상황이 변경 가능 !

// // fetch(주소) ?
// // : fetch 내장함수는 JS에서 API호출을 할 수 있도록 도와주는 내장함수 !
// // : fetch는 promise 반환 !

// ---------------------------------------------------------
// 실습 1 : 

// ---------------------------------------------------------
//  1. 실습 정답