document.write("<div>3장 리팩토링</div>");

// 리팩토링이란? 
// : 작성된 코드에 대해 기능이 아닌 코드 자체를 효율적으로,
// 수정하여 가독성을 높이고, 유지보수를 쉽게 할수있도록 중복을 제거하는 등의 작업!
// → 즉, 코드 개선 작업을 뜻하며, 틈틈히 작업하는 것을 추천!

// 예) 같은 기능을 동작하는 함수들은 id만 다르게 해서 계속 작업을 진행한다!
// 근데 만약 그 수가 엄청 많다면 또 중복이 많다면...??, 다 다르게 바꿔줘야한다!!

// → 해당 속해있는 태그를 가르키는 약속된 특수 키워드 존재 : 'this' 
// id를 없애고, id가 포함된 코드를 this 키워드를 통해 위의 문제 해결 가능!
// ex) document.querySelector('#Switch').value -> this.value

// → 중복이 많을 경우 그 태그를 변수에 저장 가능 : var target = document.querySelector("~");
// 긴 태그를 간결하게 작성함은 동시에 변수의 값 변경으로 쉬운 유지보수 가능!

// 프로덕트 실습 3 : 이전에 생성했던 버튼 3개 중 두 개를 특수 키워드 코드 수정하기!
// 프로덕트 실습 4 : 실습 3에서 수정했던 버튼 두 개의 코드 중 하나를 더 간결하게 변수에 태그를 저장해서 표현하시오!